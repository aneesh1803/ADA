#include<stdio.h>
#include<stdlib.h>

int a,b,i,j,k,u,v,n,ne=1, min, mincost=0;
int parent[9], cost[9][9];

int find(int);
int uni(int, int);

void main(){
    printf("\tKruskal:\n");

    printf("Enter the no of vertices: ");
    scanf("%d",&n);

    printf("Enter the cost adj matrix: \n");
    for(i=1; i<=n; i++){
        for(j=1; j<=n; j++){
            scanf("%d", &cost[i][j]);
            if(cost[i][j] == 0) cost[i][j] = 999;
        }
    }

    printf("The edges to be printed are: \n");

    while(ne<n){
        for(i=1, min=999; i<=n; i++){
            for(j=1; j<=n; j++){
                if(cost[i][j] < min){
                    //printf(" Cost of %d to %d is %d \n", i,j,cost[i][j]);
                    min = cost[i][j];
                    a = u = i;
                    b = v = j;
                }
            }
        }

        u = find(u);
        v = find(v);

        if(uni(u,v)){
            printf("%d edge (%d - %d): %d\n", ne++, a,b, min);
            mincost += min;
        }

        cost[a][b] = cost[b][a] = 999;
    }
    printf("\n\tMinimum cost: %d\n", mincost);
}

int find(int i){
    while(parent[i])
        i = parent[i];
    return i;
}

int uni(int i, int j){
    if(i != j){
        parent[j] = i;
        return i;
    }
    return 0;
}
