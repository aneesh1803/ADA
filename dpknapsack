#include<stdio.h>

int max(int a, int b){
    return (a>b)?a:b;
}

void knapsack(int weights[], int values[], int n, int W){
    int res[n], i,w;

    int dp[n+1][W+1];

    for(i=0; i<=n; i++){
        for(w=0; w<=W; w++){
            if(i==0||w==0)  dp[i][w] = 0;
            else if( weights[i-1]<=w)   dp[i][w] = max(values[i-1]+dp[i-1][w - weights[i-1]], dp[i-1][w]);
            else    dp[i][w] = dp[i-1][w];
        }
    }

    for(i=0; i<n; i++)  res[i] =0;

    w = W;
    int total = dp[n][W];
    printf("\nMax value is: %d\n",total);

    for(i=n; i>0 && total>0; i--){
        if(total != dp[i-1][w]){
            res[i-1] = 1;
            w = w- weights[i-1];
            total = total - values[i-1];
        }
    }

    for(i=0; i<n; i++)  printf(" %d ", res[i]);

}

void main(){
    int weights[] = {2,3,4,5};
    int values[] = {1,2,5,6};
    int n = 4, W = 8;

    knapsack(weights,values,n,W);
}
